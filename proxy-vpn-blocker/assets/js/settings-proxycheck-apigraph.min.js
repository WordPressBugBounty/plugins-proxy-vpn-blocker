jQuery(document).ready((function($){am5.ready((function(){const root=am5.Root.new("amchartAPImonth");root.setThemes([am5themes_Animated.new(root)]);const chart=root.container.children.push(am5xy.XYChart.new(root,{panX:!0,panY:!1,wheelX:"panX",wheelY:"zoomX",layout:root.verticalLayout})),xAxis=chart.xAxes.push(am5xy.CategoryAxis.new(root,{categoryField:"days",renderer:am5xy.AxisRendererX.new(root,{}),tooltip:am5.Tooltip.new(root,{})})),yAxis=chart.yAxes.push(am5xy.ValueAxis.new(root,{renderer:am5xy.AxisRendererY.new(root,{}),min:0,strictMinMax:!1,extraMax:.1}));xAxis.get("renderer").grid.template.setAll({stroke:am5.color(13421772),strokeOpacity:.2}),yAxis.get("renderer").grid.template.setAll({stroke:am5.color(13421772),strokeOpacity:.2});const seriesDefinitions=[{name:"Total",field:"total",color:14869218},{name:"Proxy",field:"proxies",color:6459359},{name:"VPN",field:"vpns",color:8773571},{name:"Compromised",field:"compromised",color:14639714},{name:"Scraper",field:"scraper",color:15241181},{name:"Hosting Provider",field:"hosting",color:9584654},{name:"Tor",field:"tor",color:10772149},{name:"Disposable Emails",field:"disposable emails",color:15984449},{name:"Reusable Emails",field:"reusable emails",color:15116857},{name:"Refused Queries",field:"refused queries",color:12202019},{name:"Custom Rules",field:"custom rules",color:11154652},{name:"Blacklisted",field:"blacklisted",color:4868682}],seriesMap={};function pvb_fetch_apigraph_data(callback){document.hidden||$.ajax({url:pvb_fetch_apigraph.ajaxurl,type:"POST",dataType:"json",data:{action:"pvb_fetch_apigraph",nonce:pvb_fetch_apigraph.nonce},success:function(response){response.success?callback(response.data):console.error("Chart data fetch failed")},error:function(xhr){console.error("AJAX error:",xhr.status,xhr.responseText)}})}function buildChart(data){document.getElementById("amchart-loading").style.display="none",data.forEach(item=>{seriesDefinitions.forEach(def=>{item[def.field]=Number(item[def.field]||0)})}),xAxis.data.setAll(data);const allSeries=[];seriesDefinitions.forEach(def=>{const color=am5.color(def.color),series=am5xy.SmoothedXLineSeries.new(root,{name:def.name,xAxis:xAxis,yAxis:yAxis,valueYField:def.field,categoryXField:"days",tooltip:am5.Tooltip.new(root,{labelText:"{name}: {valueY}"})});"total"===def.field?series.strokes.template.setAll({stroke:color,strokeWidth:2,strokeDasharray:[6,4]}):series.strokes.template.setAll({stroke:color,strokeWidth:2}),series.bullets.push(()=>am5.Bullet.new(root,{sprite:am5.Circle.new(root,{radius:0,fill:color,stroke:color})})),series.adapters.add("stroke",()=>color),series.adapters.add("fill",()=>color),series.data.setAll(data),chart.series.push(series),seriesMap[def.field]=series,allSeries.push(series)});const legend=chart.children.push(am5.Legend.new(root,{centerX:am5.p50,x:am5.p50}));legend.data.setAll(allSeries),chart.set("cursor",am5xy.XYCursor.new(root,{behavior:"zoomX",xAxis:xAxis}))}function updateChart(data){data.forEach(item=>{seriesDefinitions.forEach(def=>{item[def.field]=Number(item[def.field]||0)})}),xAxis.data.setAll(data);for(const def of seriesDefinitions){const series=seriesMap[def.field];series&&series.data.setAll(data)}}function refreshAmchartData(){document.hidden||pvb_fetch_apigraph_data(updateChart)}pvb_fetch_apigraph_data(buildChart),document.addEventListener("pvbUnifiedTick",(function(){document.hidden||refreshAmchartData()}))}))}));